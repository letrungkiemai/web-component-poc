{"version":3,"sources":["components/TestComponent.js"],"names":["template","document","createElement","innerHTML","AppCounter","_value","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","valueElement","querySelector","incrementButton","querySelectorAll","decrementButton","addEventListener","e","value","innerText","dispatchEvent","CustomEvent","detail","attrName","oldValue","newValue","parseInt","HTMLElement","customElements","define"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AAEAF,QAAQ,CAACG,SAAT;;IAoBOC;;;;;AAsBL,wBAAc;AAAA;;AAAA;;AAEZ;AAEA,UAAKC,MAAL,GAAc,CAAd;;AAEA,UAAKC,YAAL,CAAkB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAlB;;AAEA,UAAKC,UAAL,CAAgBC,WAAhB,CAA4BT,QAAQ,CAACU,OAAT,CAAiBC,SAAjB,CAA2B,IAA3B,CAA5B;;AAKA,UAAKC,YAAL,GAAoB,MAAKJ,UAAL,CAAgBK,aAAhB,CAA8B,GAA9B,CAApB;AAEA,UAAKC,eAAL,GAAuB,MAAKN,UAAL,CAAgBO,gBAAhB,CAAiC,QAAjC,EAA2C,CAA3C,CAAvB;AAEA,UAAKC,eAAL,GAAuB,MAAKR,UAAL,CAAgBO,gBAAhB,CAAiC,QAAjC,EAA2C,CAA3C,CAAvB;;AAKA,UAAKD,eAAL,CAEGG,gBAFH,CAEoB,OAFpB,EAE6B,UAACC,CAAD;AAAA,aAAO,MAAKC,KAAL,EAAP;AAAA,KAF7B;;AAOA,UAAKH,eAAL,CAEGC,gBAFH,CAEoB,OAFpB,EAE6B,UAACC,CAAD;AAAA,aAAO,MAAKC,KAAL,EAAP;AAAA,KAF7B;;AA7BY;AAiCb;;;;SAvCD,eAAY;AAEV,aAAO,KAAKd,MAAZ;AAED;SAbD,aAAUc,KAAV,EAAiB;AAEf,WAAKd,MAAL,GAAcc,KAAd;AAEA,WAAKP,YAAL,CAAkBQ,SAAlB,GAA8B,KAAKf,MAAnC;AAEA,WAAKgB,aAAL,CAAmB,IAAIC,WAAJ,CAAgB,aAAhB,EAA+B;AAAEC,QAAAA,MAAM,EAAE,KAAKlB;AAAf,OAA/B,CAAnB;AAED;;;WA6CD,kCAAyBmB,QAAzB,EAAmCC,QAAnC,EAA6CC,QAA7C,EAAuD;AAErD,UAAIF,QAAQ,KAAK,OAAjB,EAA0B;AAExB,aAAKL,KAAL,GAAaQ,QAAQ,CAACD,QAAD,EAAW,EAAX,CAArB;AAED;AAEF;;;SAlED,eAAgC;AAE9B,aAAO,CAAC,OAAD,CAAP;AAED;;;;iCANuBE;;AA2E1BC,cAAc,CAACC,MAAf,CAAsB,aAAtB,EAAqC1B,UAArC","file":"TestComponent.dcdbaf67.js","sourceRoot":"../src","sourcesContent":["const template = document.createElement('template');\n\ntemplate.innerHTML = `\n\n  <style>\n\n    button, p {\n\n      display: inline-block;\n\n    }\n\n  </style>\n\n  <button aria-label=\"decrement\">-</button>\n\n  <p>1</p>\n\n  <button aria-label=\"increment\">+</button>\n\n`;\n\n class AppCounter extends HTMLElement {\n\n  static get observedAttributes() {\n\n    return ['value'];\n\n  }\n  set value(value) {\n\n    this._value = value;\n\n    this.valueElement.innerText = this._value;\n\n    this.dispatchEvent(new CustomEvent('valueChange', { detail: this._value }));\n\n  }\n  get value() {\n\n    return this._value;\n\n  }\n\n  constructor() {\n\n    super();\n\n    this._value = 0;\n\n    this.attachShadow({ mode: 'open' });\n\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n\n\n\n    this.valueElement = this.shadowRoot.querySelector('p');\n\n    this.incrementButton = this.shadowRoot.querySelectorAll('button')[1];\n\n    this.decrementButton = this.shadowRoot.querySelectorAll('button')[0];\n\n\n\n\n    this.incrementButton\n\n      .addEventListener('click', (e) => this.value++);\n\n\n\n\n    this.decrementButton\n\n      .addEventListener('click', (e) => this.value--);\n\n  }\n\n\n\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n\n    if (attrName === 'value') {\n\n      this.value = parseInt(newValue, 10);\n\n    }\n\n  }\n\n}\n\n\n\n\ncustomElements.define('app-counter', AppCounter);"]}